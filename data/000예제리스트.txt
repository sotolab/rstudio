
== [class1] ==
exam001.txt
# 스칼라 변수 예제

exam002.txt
# 벡터 변수 예제

exam003.txt
# 자료형 확인 예제

exam004.txt
# 자료형 변환 예제

exam005.txt
# 자료형과 자료구조 예제

exam006.txt
# 날짜 변환 예제

exam007.txt
# 작업공간 변경 예제

== [class2] ==

exam001.txt
# 벡터 응용 예제
# 1 백터 데이터 생성
# 2 합집합
# 3 first에 있고, second에 없는 것
# 4 first와 second 공통으로 있는 것
# 5 세미콜론(;)을 구분

exam002.txt
# 행렬 자료구조
# 1 matrix 행렬
# 2 열 기준으로 행렬
# 3 행 기준으로 행렬
# 4 다중 3 * 3 행렬
# 5 행 길이
# 6 행렬 자료 처리 (1: 행 단위, 2: 열 단위)
# 7 행 단위로 각 행의 최소값
# 8 열 단위로 각 열의 평균값 
# 9 행렬 객체에 칼럼명 지정

exam003.txt
# 배열 
# 1 3행, 2열, 2면 배열 객체 생성

exam004.txt
# 데이타프레임 자료구조
# 1 벡터를 이용한 데이트프레임 객체 생성
# 2 matrix를 이용한 데이터프레임 객체 생성
# 3 txt 파일 불러와서 데이터프레임 객체 생성
# 4 데이터프레임 객체 생성
# 5 객체 칼럼명만 보기
# 6 1열(x)과 2열(y)의 합계 
# 7 서브셋으로 부분 객체 만들기 (y에서 6이상인 내용만 객체 만들기)
# 8 두 개 이상의 데이터프레임 병합
# 9 자료형(mode)과 자료 구조(class) 확인

exam005.txt
# 리스트 자료 구조
# 1 list 생성
# 2 리스트를 벡터 구조로 변경
# 3 key와 value로 생성
# 4 name의 첫번째 값 출력
# 5 htype의 첫번째 값 출력
# 6 htype의 두번째 값을 "office"로 변경
# 7 gender 원소 제거
# 8 다차원 리스트 객체 생성
# 9 다차원 리스트를 열 단위로 바인딩


exam006.txt
# 문자열 처리
# 1 stringr 패키지 설치 및 로드
# 2 정규식 표현, 숫자 2개와 일치하는 첫번째 문자열
# 3 정규식 표현, 숫자 2개와 일치하는 모든 문자열
# 4 영문 3자리 연속 글 추출
# 5 영문 3자리 이상 연속 글 추출
# 6 문자열 길이
# 7 문자열 추가
# 8 문자열 벡터 생성 후 콤마를 기준으로 문자열 벡터 생성


exam007.txt
# 데이터 입출력
# 1 숫자 입력받기
# 2 문자열 입력 받기 
# 3 에디터를 통한 데이터 입력
# 4 txt 컬럼명이 없는 데이터 불러오기
# 5 txt 컬럼명이 있는 데이터 불러오기
# 6 파일대화상자에서 선택한 데이터 불러오기
# 7 세미콜론으로 구별된 데이터 불러오기
# 8 탭으로 구별된 데이터 불러오기
# 9 데이터 없는 경우 결측치(NA)로 처리하여 데이터 불러오기
# 10 csv로 저장된(콤마,) 데이터 불러오기
# 11 엑셀 파일 불러오기

exam008.txt
# 파일 저장
# 1 cat와 print 메시지 출력
# 2 write.table 함수를 이용한 txt 파일 저장
# 3 write.table 함수를 이용한 csv 파일 저장
# 4 writexl 이용한 xlsx 파일 저장

exam009.txt
# 사용자 정의 함수
# 1 빈도수 나타내기
# 2 구구단

== [class3] ==

exam001.txt

